name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # Runs at 15:00 UTC on Fri
    - cron: "0 15 * * 5"

env:
  CARGO_TERM_COLOR: always
  # Deny warns here as a catch-all and because some commands (e.g. cargo build) don't accept `--deny warnings`
  # but also deny them on all individual cargo invocations where applicable because:
  # 1) Some commands might not support rustflags (e.g. clippy didn't at first, cargo doc uses a different var, ...)
  # 2) People (or me) might copy paste the commands into CI where this flag is missing without noticing.
  RUSTFLAGS: --deny warnings

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, stable]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - run: rustc --version && cargo --version
      - run: cargo build --verbose
      - run: cargo test --verbose --all-features

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo fmt --version
      - run: cargo fmt -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo clippy --version
        # Use --all-targets to also check tests.
        # Note that --all-features doesn't check all code when something is *disabled* by a feature.
      - run: cargo clippy --all-targets --all-features -- --deny warnings
        # No fixmes allowed - they're to be fixed before committing
        # or at least before merging to master so they can be used
        # during development for things that must not be forgotten
        # and grep's output is not littered with other people's fixmes.
        #
        # Grep returns success when found and failure when not found, `!` inverts success/failure.
        # The `[F]` is the usual trick to avoid matching this line itself
        # while still matching other potential uses in this file.
      - run: "! ( grep --recursive --exclude-dir=target [F]IXME . && echo 'The lines above this message must be fixed (or marked as todo/later in uppercase, not fixme)' )"

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly # docs.rs uses nightly
          override: true
      - run: rustc --version && cargo --version
      - run: cargo doc --all-features
        env:
          RUSTDOCFLAGS: --deny warnings
